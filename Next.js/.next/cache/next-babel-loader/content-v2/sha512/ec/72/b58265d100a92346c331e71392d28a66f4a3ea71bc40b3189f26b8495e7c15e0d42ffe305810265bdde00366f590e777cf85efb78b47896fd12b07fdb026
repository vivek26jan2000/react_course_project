{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\online courses\\\\React js practicals\\\\Next.js\\\\pages\\\\index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\nconst Dummy_Meetups = [{\n  id: \"m1\",\n  title: \"first meetup\",\n  image: \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bWVldHVwfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\",\n  address: \"new delhi india\",\n  description: \"\"\n}, {\n  id: \"m2\",\n  title: \"second meetup\",\n  image: \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bWVldHVwfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\",\n  address: \"greater noida  india\",\n  description: \"\"\n}];\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\nexport default HomePage;\nexport async function getStaticProps(context) {\n  const mongoose = require(\"mongoose\");\n\n  mongoose.connect(\"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\").then(() => {\n    console.log(\"db is connect\");\n  });\n  const meetupSchema = new mongoose.Schema({\n    title: {\n      type: String\n    },\n    description: {\n      type: String\n    },\n    address: {\n      type: String\n    },\n    image: {\n      type: String\n    }\n  });\n  let Meetup;\n\n  try {\n    Meetup = mongoose.model(\"Meetup\");\n  } catch (error) {\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\n  }\n\n  const allMeetups = await Meetup.find();\n  return {\n    props: {\n      meetups: allMeetups.map(meetup => ({\n        id: meetup._id,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }))\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/online courses/React js practicals/Next.js/pages/index.js"],"names":["MeetupList","Dummy_Meetups","id","title","image","address","description","HomePage","props","meetups","getStaticProps","context","mongoose","require","connect","then","console","log","meetupSchema","Schema","type","String","Meetup","model","error","allMeetups","find","map","meetup","_id"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACpB;AACEC,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,cAFT;AAGEC,EAAAA,KAAK,EACH,2KAJJ;AAKEC,EAAAA,OAAO,EAAE,iBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CADoB,EASpB;AACEJ,EAAAA,EAAE,EAAE,IADN;AAEEC,EAAAA,KAAK,EAAE,eAFT;AAGEC,EAAAA,KAAK,EACH,2KAJJ;AAKEC,EAAAA,OAAO,EAAE,sBALX;AAMEC,EAAAA,WAAW,EAAE;AANf,CAToB,CAAtB;;AAmBA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAFD;;AAGA,eAAeF,QAAf;AAEA,OAAO,eAAeG,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEAD,EAAAA,QAAQ,CACLE,OADH,CAEI,yEAFJ,EAIGC,IAJH,CAIQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GANH;AAQA,QAAMC,YAAY,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACvChB,IAAAA,KAAK,EAAE;AACLiB,MAAAA,IAAI,EAAEC;AADD,KADgC;AAIvCf,IAAAA,WAAW,EAAE;AACXc,MAAAA,IAAI,EAAEC;AADK,KAJ0B;AAOvChB,IAAAA,OAAO,EAAE;AACPe,MAAAA,IAAI,EAAEC;AADC,KAP8B;AAUvCjB,IAAAA,KAAK,EAAE;AACLgB,MAAAA,IAAI,EAAEC;AADD;AAVgC,GAApB,CAArB;AAeA,MAAIC,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAGV,QAAQ,CAACW,KAAT,CAAe,QAAf,CAAT;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdF,IAAAA,MAAM,GAAGV,QAAQ,CAACW,KAAT,CAAe,QAAf,EAAyBL,YAAzB,CAAT;AACD;;AAED,QAAMO,UAAU,GAAG,MAAMH,MAAM,CAACI,IAAP,EAAzB;AAEA,SAAO;AACLlB,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEgB,UAAU,CAACE,GAAX,CAAgBC,MAAD,KAAa;AACnC1B,QAAAA,EAAE,EAAE0B,MAAM,CAACC,GADwB;AAEnC1B,QAAAA,KAAK,EAAEyB,MAAM,CAACzB,KAFqB;AAGnCE,QAAAA,OAAO,EAAEuB,MAAM,CAACvB,OAHmB;AAInCC,QAAAA,WAAW,EAAEsB,MAAM,CAACtB,WAJe;AAKnCF,QAAAA,KAAK,EAAEwB,MAAM,CAACxB;AALqB,OAAb,CAAf;AADJ;AADF,GAAP;AAWD","sourcesContent":["import MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst Dummy_Meetups = [\r\n  {\r\n    id: \"m1\",\r\n    title: \"first meetup\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bWVldHVwfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\",\r\n    address: \"new delhi india\",\r\n    description: \"\",\r\n  },\r\n  {\r\n    id: \"m2\",\r\n    title: \"second meetup\",\r\n    image:\r\n      \"https://images.unsplash.com/photo-1568992688065-536aad8a12f6?ixlib=rb-4.0.3&ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bWVldHVwfGVufDB8fDB8fA%3D%3D&auto=format&fit=crop&w=500&q=60\",\r\n    address: \"greater noida  india\",\r\n    description: \"\",\r\n  },\r\n];\r\n\r\nconst HomePage = (props) => {\r\n  return <MeetupList meetups={props.meetups}></MeetupList>;\r\n};\r\nexport default HomePage;\r\n\r\nexport async function getStaticProps(context) {\r\n  const mongoose = require(\"mongoose\");\r\n\r\n  mongoose\r\n    .connect(\r\n      \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\r\n    )\r\n    .then(() => {\r\n      console.log(\"db is connect\");\r\n    });\r\n\r\n  const meetupSchema = new mongoose.Schema({\r\n    title: {\r\n      type: String,\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    address: {\r\n      type: String,\r\n    },\r\n    image: {\r\n      type: String,\r\n    },\r\n  });\r\n\r\n  let Meetup;\r\n\r\n  try {\r\n    Meetup = mongoose.model(\"Meetup\");\r\n  } catch (error) {\r\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n  }\r\n\r\n  const allMeetups = await Meetup.find();\r\n\r\n  return {\r\n    props: {\r\n      meetups: allMeetups.map((meetup) => ({\r\n        id: meetup._id,\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n      })),\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}