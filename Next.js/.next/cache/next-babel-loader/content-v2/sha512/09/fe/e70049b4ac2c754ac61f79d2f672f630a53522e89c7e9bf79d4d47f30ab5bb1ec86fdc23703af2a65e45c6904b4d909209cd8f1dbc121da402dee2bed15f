{"ast":null,"code":"const mongoose = require(\"mongoose\");\n\nasync function newMeetupHandler(req, res) {\n  if (req.method === \"POST\") {\n    const DB = \"mongodb+srv://vivek:Vivek@26jan2000@cluster0.aqinzv6.mongodb.net/meetups?retryWrites=true&w=majority\";\n    mongoose.connect(DB, {\n      useNewUrlParser: true,\n      useCreateIndex: true,\n      useFindAndModify: false,\n      useUnifiedTopology: true\n    }).then(() => {\n      console.log(\"DB is connected sucessfully!\");\n    });\n    const meetupSchema = new mongoose.Schema({\n      title: {\n        type: String\n      },\n      description: {\n        type: String\n      },\n      address: {\n        type: String\n      },\n      image: {\n        type: String\n      }\n    });\n    const Meetup = mongoose.model(\"Meetup\", meetupSchema);\n    const newMeetup = await Meetup.create(req.body);\n    res.status(201).json({\n      status: \"success\",\n      message: \"New meetup created successfully\",\n      data: {\n        newMeetup\n      }\n    });\n  }\n}\n\nexport default newMeetupHandler;","map":{"version":3,"sources":["C:/Users/HP/Desktop/online courses/React js practicals/Next.js/pages/api/new-meetup.js"],"names":["mongoose","require","newMeetupHandler","req","res","method","DB","connect","useNewUrlParser","useCreateIndex","useFindAndModify","useUnifiedTopology","then","console","log","meetupSchema","Schema","title","type","String","description","address","image","Meetup","model","newMeetup","create","body","status","json","message","data"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,eAAeC,gBAAf,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACxC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,EAAE,GACN,sGADF;AAGAN,IAAAA,QAAQ,CACLO,OADH,CACWD,EADX,EACe;AACXE,MAAAA,eAAe,EAAE,IADN;AAEXC,MAAAA,cAAc,EAAE,IAFL;AAGXC,MAAAA,gBAAgB,EAAE,KAHP;AAIXC,MAAAA,kBAAkB,EAAE;AAJT,KADf,EAOGC,IAPH,CAOQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACD,KATH;AAWA,UAAMC,YAAY,GAAG,IAAIf,QAAQ,CAACgB,MAAb,CAAoB;AACvCC,MAAAA,KAAK,EAAE;AACLC,QAAAA,IAAI,EAAEC;AADD,OADgC;AAIvCC,MAAAA,WAAW,EAAE;AACXF,QAAAA,IAAI,EAAEC;AADK,OAJ0B;AAOvCE,MAAAA,OAAO,EAAE;AACPH,QAAAA,IAAI,EAAEC;AADC,OAP8B;AAUvCG,MAAAA,KAAK,EAAE;AACLJ,QAAAA,IAAI,EAAEC;AADD;AAVgC,KAApB,CAArB;AAeA,UAAMI,MAAM,GAAGvB,QAAQ,CAACwB,KAAT,CAAe,QAAf,EAAyBT,YAAzB,CAAf;AAEA,UAAMU,SAAS,GAAG,MAAMF,MAAM,CAACG,MAAP,CAAcvB,GAAG,CAACwB,IAAlB,CAAxB;AAEAvB,IAAAA,GAAG,CAACwB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,SADW;AAEnBE,MAAAA,OAAO,EAAE,iCAFU;AAGnBC,MAAAA,IAAI,EAAE;AACJN,QAAAA;AADI;AAHa,KAArB;AAOD;AACF;;AAED,eAAevB,gBAAf","sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nasync function newMeetupHandler(req, res) {\r\n  if (req.method === \"POST\") {\r\n    const DB =\r\n      \"mongodb+srv://vivek:Vivek@26jan2000@cluster0.aqinzv6.mongodb.net/meetups?retryWrites=true&w=majority\";\r\n\r\n    mongoose\r\n      .connect(DB, {\r\n        useNewUrlParser: true,\r\n        useCreateIndex: true,\r\n        useFindAndModify: false,\r\n        useUnifiedTopology: true,\r\n      })\r\n      .then(() => {\r\n        console.log(\"DB is connected sucessfully!\");\r\n      });\r\n\r\n    const meetupSchema = new mongoose.Schema({\r\n      title: {\r\n        type: String,\r\n      },\r\n      description: {\r\n        type: String,\r\n      },\r\n      address: {\r\n        type: String,\r\n      },\r\n      image: {\r\n        type: String,\r\n      },\r\n    });\r\n\r\n    const Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n\r\n    const newMeetup = await Meetup.create(req.body);\r\n\r\n    res.status(201).json({\r\n      status: \"success\",\r\n      message: \"New meetup created successfully\",\r\n      data: {\r\n        newMeetup,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default newMeetupHandler;\r\n"]},"metadata":{},"sourceType":"module"}