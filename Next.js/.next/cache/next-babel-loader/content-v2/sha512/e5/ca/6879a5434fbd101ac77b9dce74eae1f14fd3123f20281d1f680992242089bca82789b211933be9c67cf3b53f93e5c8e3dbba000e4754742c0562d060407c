{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\online courses\\\\React js practicals\\\\Next.js\\\\pages\\\\[meetupsID]\\\\index.js\",\n    _this = this;\n\nimport Card from \"../../components/ui/Card\";\n\nvar mongoose = require(\"mongoose\");\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.image,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.meetup.image,\n          alt: props.meetup.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.meetup.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"address\", {\n          children: props.meetup.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.meetup.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nmongoose.connect(\"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\").then(function () {\n  console.log(\"db is connect\");\n});\nvar meetupSchema = new mongoose.Schema({\n  title: {\n    type: String\n  },\n  description: {\n    type: String\n  },\n  address: {\n    type: String\n  },\n  image: {\n    type: String\n  }\n});\n\ntry {\n  Meetup = mongoose.model(\"Meetup\");\n} catch (error) {\n  Meetup = mongoose.model(\"Meetup\", meetupSchema);\n}\n\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/online courses/React js practicals/Next.js/pages/[meetupsID]/index.js"],"names":["Card","mongoose","require","MeetupDetails","props","classes","item","image","meetup","title","content","address","description","connect","then","console","log","meetupSchema","Schema","type","String","Meetup","model","error"],"mappings":";;;;;AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;AACA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE;AAAI,IAAA,SAAS,EAAEC,OAAO,CAACC,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACE,KAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEH,KAAK,CAACI,MAAN,CAAaD,KAAvB;AAA8B,UAAA,GAAG,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,eADF,eAIE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACK,OAAxB;AAAA,gCACE;AAAA,oBAAKN,KAAK,CAACI,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAA,oBAAUL,KAAK,CAACI,MAAN,CAAaG;AAAvB;AAAA;AAAA;AAAA;AAAA,iBAFF,eAGE;AAAA,oBAAKP,KAAK,CAACI,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,iBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAcD,CAfD;;KAAMT,a;AAgBNF,QAAQ,CACLY,OADH,CAEI,yEAFJ,EAIGC,IAJH,CAIQ,YAAM;AACVC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,CANH;AAQA,IAAMC,YAAY,GAAG,IAAIhB,QAAQ,CAACiB,MAAb,CAAoB;AACvCT,EAAAA,KAAK,EAAE;AACLU,IAAAA,IAAI,EAAEC;AADD,GADgC;AAIvCR,EAAAA,WAAW,EAAE;AACXO,IAAAA,IAAI,EAAEC;AADK,GAJ0B;AAOvCT,EAAAA,OAAO,EAAE;AACPQ,IAAAA,IAAI,EAAEC;AADC,GAP8B;AAUvCb,EAAAA,KAAK,EAAE;AACLY,IAAAA,IAAI,EAAEC;AADD;AAVgC,CAApB,CAArB;;AAiBA,IAAI;AACFC,EAAAA,MAAM,GAAGpB,QAAQ,CAACqB,KAAT,CAAe,QAAf,CAAT;AACD,CAFD,CAEE,OAAOC,KAAP,EAAc;AACdF,EAAAA,MAAM,GAAGpB,QAAQ,CAACqB,KAAT,CAAe,QAAf,EAAyBL,YAAzB,CAAT;AACD;;;AAgCD,eAAed,aAAf","sourcesContent":["import Card from \"../../components/ui/Card\";\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <div className={classes.image}>\r\n          <img src={props.meetup.image} alt={props.meetup.title} />\r\n        </div>\r\n        <div className={classes.content}>\r\n          <h3>{props.meetup.title}</h3>\r\n          <address>{props.meetup.address}</address>\r\n          <h3>{props.meetup.description}</h3>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\nmongoose\r\n  .connect(\r\n    \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\r\n  )\r\n  .then(() => {\r\n    console.log(\"db is connect\");\r\n  });\r\n\r\nconst meetupSchema = new mongoose.Schema({\r\n  title: {\r\n    type: String,\r\n  },\r\n  description: {\r\n    type: String,\r\n  },\r\n  address: {\r\n    type: String,\r\n  },\r\n  image: {\r\n    type: String,\r\n  },\r\n});\r\n\r\nlet Meetup;\r\n\r\ntry {\r\n  Meetup = mongoose.model(\"Meetup\");\r\n} catch (error) {\r\n  Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  const allMeetups = await Meetup.find();\r\n\r\n  return {\r\n    // paths: [{ params: { id: '1' } }, { params: { id: '2' } }],\r\n    paths: allMeetups.map((meetup) => ({\r\n      params: { id: meetup._id.toString() },\r\n    })),\r\n    fallback: false, // can also be true or 'blocking'\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupID = context.params.meetupsID;\r\n\r\n  const meetup = await Meetup.findById(meetupID);\r\n\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}