{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\online courses\\\\React js practicals\\\\Next.js\\\\pages\\\\[meetupsID]\\\\index.js\";\nimport Card from \"../../components/ui/Card\";\n\nconst mongoose = require(\"mongoose\");\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: classes.item,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.image,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.meetup.image,\n          alt: props.meetup.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.meetup.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"address\", {\n          children: props.meetup.address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: props.meetup.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  const meetupID = context.params.meetupsID;\n  mongoose.connect(\"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\").then(() => {\n    console.log(\"db is connect\");\n  });\n  const meetupSchema = new mongoose.Schema({\n    title: {\n      type: String\n    },\n    description: {\n      type: String\n    },\n    address: {\n      type: String\n    },\n    image: {\n      type: String\n    }\n  });\n  let Meetup;\n\n  try {\n    Meetup = mongoose.model(\"Meetup\");\n  } catch (error) {\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\n  }\n\n  const meetup = await Meetup.findById(meetupID);\n  return {\n    props: {\n      meetup: {\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description,\n        image: meetup.image\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/HP/Desktop/online courses/React js practicals/Next.js/pages/[meetupsID]/index.js"],"names":["Card","mongoose","require","MeetupDetails","props","classes","item","image","meetup","title","content","address","description","getStaticProps","context","meetupID","params","meetupsID","connect","then","console","log","meetupSchema","Schema","type","String","Meetup","model","error","findById","id","_id","toString"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,0BAAjB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE;AAAI,IAAA,SAAS,EAAEC,OAAO,CAACC,IAAvB;AAAA,2BACE,QAAC,IAAD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAED,OAAO,CAACE,KAAxB;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEH,KAAK,CAACI,MAAN,CAAaD,KAAvB;AAA8B,UAAA,GAAG,EAAEH,KAAK,CAACI,MAAN,CAAaC;AAAhD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAEJ,OAAO,CAACK,OAAxB;AAAA,gCACE;AAAA,oBAAKN,KAAK,CAACI,MAAN,CAAaC;AAAlB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAUL,KAAK,CAACI,MAAN,CAAaG;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAKP,KAAK,CAACI,MAAN,CAAaI;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;AAiBA,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,QAAQ,GAAGD,OAAO,CAACE,MAAR,CAAeC,SAAhC;AAEAhB,EAAAA,QAAQ,CACLiB,OADH,CAEI,yEAFJ,EAIGC,IAJH,CAIQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GANH;AAQA,QAAMC,YAAY,GAAG,IAAIrB,QAAQ,CAACsB,MAAb,CAAoB;AACvCd,IAAAA,KAAK,EAAE;AACLe,MAAAA,IAAI,EAAEC;AADD,KADgC;AAIvCb,IAAAA,WAAW,EAAE;AACXY,MAAAA,IAAI,EAAEC;AADK,KAJ0B;AAOvCd,IAAAA,OAAO,EAAE;AACPa,MAAAA,IAAI,EAAEC;AADC,KAP8B;AAUvClB,IAAAA,KAAK,EAAE;AACLiB,MAAAA,IAAI,EAAEC;AADD;AAVgC,GAApB,CAArB;AAeA,MAAIC,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,QAAf,CAAT;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdF,IAAAA,MAAM,GAAGzB,QAAQ,CAAC0B,KAAT,CAAe,QAAf,EAAyBL,YAAzB,CAAT;AACD;;AAED,QAAMd,MAAM,GAAG,MAAMkB,MAAM,CAACG,QAAP,CAAgBd,QAAhB,CAArB;AAEA,SAAO;AACLX,IAAAA,KAAK,EAAE;AACLI,MAAAA,MAAM,EAAE;AACNsB,QAAAA,EAAE,EAAEtB,MAAM,CAACuB,GAAP,CAAWC,QAAX,EADE;AAENvB,QAAAA,KAAK,EAAED,MAAM,CAACC,KAFR;AAGNE,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHV;AAINC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJd;AAKNL,QAAAA,KAAK,EAAEC,MAAM,CAACD;AALR;AADH;AADF,GAAP;AAWD;AAED,eAAeJ,aAAf","sourcesContent":["import Card from \"../../components/ui/Card\";\r\nconst mongoose = require(\"mongoose\");\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <li className={classes.item}>\r\n      <Card>\r\n        <div className={classes.image}>\r\n          <img src={props.meetup.image} alt={props.meetup.title} />\r\n        </div>\r\n        <div className={classes.content}>\r\n          <h3>{props.meetup.title}</h3>\r\n          <address>{props.meetup.address}</address>\r\n          <h3>{props.meetup.description}</h3>\r\n        </div>\r\n      </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupID = context.params.meetupsID;\r\n\r\n  mongoose\r\n    .connect(\r\n      \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\r\n    )\r\n    .then(() => {\r\n      console.log(\"db is connect\");\r\n    });\r\n\r\n  const meetupSchema = new mongoose.Schema({\r\n    title: {\r\n      type: String,\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    address: {\r\n      type: String,\r\n    },\r\n    image: {\r\n      type: String,\r\n    },\r\n  });\r\n\r\n  let Meetup;\r\n\r\n  try {\r\n    Meetup = mongoose.model(\"Meetup\");\r\n  } catch (error) {\r\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n  }\r\n\r\n  const meetup = await Meetup.findById(meetupID);\r\n\r\n  return {\r\n    props: {\r\n      meetup: {\r\n        id: meetup._id.toString(),\r\n        title: meetup.title,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n        image: meetup.image,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}