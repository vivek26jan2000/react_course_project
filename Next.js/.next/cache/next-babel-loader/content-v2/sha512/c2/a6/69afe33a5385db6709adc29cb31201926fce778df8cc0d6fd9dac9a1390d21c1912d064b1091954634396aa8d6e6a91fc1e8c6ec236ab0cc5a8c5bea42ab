{"ast":null,"code":"const mongoose = require(\"mongoose\");\n\nfunction dbConnection() {\n  mongoose.connect(\"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\").then(() => {\n    console.log(\"db is connect\");\n  });\n  const meetupSchema = new mongoose.Schema({\n    title: {\n      type: String\n    },\n    description: {\n      type: String\n    },\n    address: {\n      type: String\n    },\n    image: {\n      type: String\n    }\n  }); // const Meetup = mongoose.model(\"Meetup\", meetupSchema);\n\n  let Meetup;\n\n  try {\n    Meetup = mongoose.model(\"Meetup\");\n  } catch (error) {\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\n  }\n} // mongoose\n//   .connect(\n//     \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\n//   )\n//   .then(() => {\n//     console.log(\"db is connect\");\n//   });\n// const meetupSchema = new mongoose.Schema({\n//   title: {\n//     type: String,\n//   },\n//   description: {\n//     type: String,\n//   },\n//   address: {\n//     type: String,\n//   },\n//   image: {\n//     type: String,\n//   },\n// });\n// // const Meetup = mongoose.model(\"Meetup\", meetupSchema);\n// let Meetup;\n// try {\n//   Meetup = mongoose.model(\"Meetup\");\n// } catch (error) {\n//   Meetup = mongoose.model(\"Meetup\", meetupSchema);\n// }\n\n\nasync function newMeetupHandler(req, res) {\n  dbConnection();\n\n  if (req.method === \"POST\") {\n    const newMeetup = await Meetup.create(req.body);\n    res.status(201).json({\n      status: \"success\",\n      message: \"New meetup created successfully\",\n      data: {\n        newMeetup\n      }\n    });\n  }\n}\n\nexport default newMeetupHandler;","map":{"version":3,"sources":["C:/Users/HP/Desktop/online courses/React js practicals/Next.js/pages/api/new-meetup.js"],"names":["mongoose","require","dbConnection","connect","then","console","log","meetupSchema","Schema","title","type","String","description","address","image","Meetup","model","error","newMeetupHandler","req","res","method","newMeetup","create","body","status","json","message","data"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AAEA,SAASC,YAAT,GAAwB;AACtBF,EAAAA,QAAQ,CACLG,OADH,CAEI,yEAFJ,EAIGC,IAJH,CAIQ,MAAM;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GANH;AAQA,QAAMC,YAAY,GAAG,IAAIP,QAAQ,CAACQ,MAAb,CAAoB;AACvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,IAAI,EAAEC;AADD,KADgC;AAIvCC,IAAAA,WAAW,EAAE;AACXF,MAAAA,IAAI,EAAEC;AADK,KAJ0B;AAOvCE,IAAAA,OAAO,EAAE;AACPH,MAAAA,IAAI,EAAEC;AADC,KAP8B;AAUvCG,IAAAA,KAAK,EAAE;AACLJ,MAAAA,IAAI,EAAEC;AADD;AAVgC,GAApB,CAArB,CATsB,CAwBtB;;AAEA,MAAII,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAGf,QAAQ,CAACgB,KAAT,CAAe,QAAf,CAAT;AACD,GAFD,CAEE,OAAOC,KAAP,EAAc;AACdF,IAAAA,MAAM,GAAGf,QAAQ,CAACgB,KAAT,CAAe,QAAf,EAAyBT,YAAzB,CAAT;AACD;AACF,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;AAEA,eAAeW,gBAAf,CAAgCC,GAAhC,EAAqCC,GAArC,EAA0C;AACxClB,EAAAA,YAAY;;AACZ,MAAIiB,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,UAAMC,SAAS,GAAG,MAAMP,MAAM,CAACQ,MAAP,CAAcJ,GAAG,CAACK,IAAlB,CAAxB;AAEAJ,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBD,MAAAA,MAAM,EAAE,SADW;AAEnBE,MAAAA,OAAO,EAAE,iCAFU;AAGnBC,MAAAA,IAAI,EAAE;AACJN,QAAAA;AADI;AAHa,KAArB;AAOD;AACF;;AAED,eAAeJ,gBAAf","sourcesContent":["const mongoose = require(\"mongoose\");\r\n\r\nfunction dbConnection() {\r\n  mongoose\r\n    .connect(\r\n      \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\r\n    )\r\n    .then(() => {\r\n      console.log(\"db is connect\");\r\n    });\r\n\r\n  const meetupSchema = new mongoose.Schema({\r\n    title: {\r\n      type: String,\r\n    },\r\n    description: {\r\n      type: String,\r\n    },\r\n    address: {\r\n      type: String,\r\n    },\r\n    image: {\r\n      type: String,\r\n    },\r\n  });\r\n\r\n  // const Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n\r\n  let Meetup;\r\n\r\n  try {\r\n    Meetup = mongoose.model(\"Meetup\");\r\n  } catch (error) {\r\n    Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n  }\r\n}\r\n\r\n// mongoose\r\n//   .connect(\r\n//     \"mongodb+srv://vivek:Vivek%4026jan2000@cluster0.aqinzv6.mongodb.net/test\"\r\n//   )\r\n//   .then(() => {\r\n//     console.log(\"db is connect\");\r\n//   });\r\n\r\n// const meetupSchema = new mongoose.Schema({\r\n//   title: {\r\n//     type: String,\r\n//   },\r\n//   description: {\r\n//     type: String,\r\n//   },\r\n//   address: {\r\n//     type: String,\r\n//   },\r\n//   image: {\r\n//     type: String,\r\n//   },\r\n// });\r\n\r\n// // const Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n\r\n// let Meetup;\r\n\r\n// try {\r\n//   Meetup = mongoose.model(\"Meetup\");\r\n// } catch (error) {\r\n//   Meetup = mongoose.model(\"Meetup\", meetupSchema);\r\n// }\r\n\r\nasync function newMeetupHandler(req, res) {\r\n  dbConnection();\r\n  if (req.method === \"POST\") {\r\n    const newMeetup = await Meetup.create(req.body);\r\n\r\n    res.status(201).json({\r\n      status: \"success\",\r\n      message: \"New meetup created successfully\",\r\n      data: {\r\n        newMeetup,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport default newMeetupHandler;\r\n"]},"metadata":{},"sourceType":"module"}